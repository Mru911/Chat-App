{"ast":null,"code":"var _jsxFileName = \"D:\\\\React Projects\\\\chat app\\\\chat-app\\\\src\\\\context\\\\ChatContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useContext, useReducer } from \"react\";\nimport { AuthContext } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatContext = /*#__PURE__*/createContext();\nexport const ChatContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const INITIAL_STATE = {\n    chatId: \"null\",\n    user: {}\n  };\n\n  const chatReducer = (state, action) => {\n    switch (action.type) {\n      case \"CHANGE_USER\":\n        return {\n          user: action.payload,\n          chatId: currentUser.uid > action.payload.uid ? currentUser.uid + action.payload.uid : action.payload.uid + currentUser.uid\n        };\n\n      default:\n        return state;\n    }\n  };\n\n  const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\n  return /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n    value: {\n      data: state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ChatContextProvider, \"j7iuR1KHMw0ikD9YRG3aml+uPp8=\");\n\n_c = ChatContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContextProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","AuthContext","ChatContext","ChatContextProvider","children","currentUser","INITIAL_STATE","chatId","user","chatReducer","state","action","type","payload","uid","dispatch","data"],"sources":["D:/React Projects/chat app/chat-app/src/context/ChatContext.js"],"sourcesContent":["import {\r\n    createContext,\r\n    useContext,\r\n    useReducer,\r\n  } from \"react\";\r\n  import { AuthContext } from \"./AuthContext\";\r\n  \r\n  export const ChatContext = createContext();\r\n  \r\n  export const ChatContextProvider = ({ children }) => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const INITIAL_STATE = {\r\n      chatId: \"null\",\r\n      user: {},\r\n    };\r\n  \r\n    const chatReducer = (state, action) => {\r\n      switch (action.type) {\r\n        case \"CHANGE_USER\":\r\n          return {\r\n            user: action.payload,\r\n            chatId:\r\n              currentUser.uid > action.payload.uid\r\n                ? currentUser.uid + action.payload.uid\r\n                : action.payload.uid + currentUser.uid,\r\n          };\r\n  \r\n        default:\r\n          return state;\r\n      }\r\n    };\r\n  \r\n    const [state, dispatch] = useReducer(chatReducer, INITIAL_STATE);\r\n  \r\n    return (\r\n      <ChatContext.Provider value={{ data:state, dispatch }}>\r\n        {children}\r\n      </ChatContext.Provider>\r\n    );\r\n  };"],"mappings":";;;AAAA,SACIA,aADJ,EAEIC,UAFJ,EAGIC,UAHJ,QAIS,OAJT;AAKE,SAASC,WAAT,QAA4B,eAA5B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACnD,MAAM;IAAEC;EAAF,IAAkBN,UAAU,CAACE,WAAD,CAAlC;EACA,MAAMK,aAAa,GAAG;IACpBC,MAAM,EAAE,MADY;IAEpBC,IAAI,EAAE;EAFc,CAAtB;;EAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;IACrC,QAAQA,MAAM,CAACC,IAAf;MACE,KAAK,aAAL;QACE,OAAO;UACLJ,IAAI,EAAEG,MAAM,CAACE,OADR;UAELN,MAAM,EACJF,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GAAjC,GACIT,WAAW,CAACS,GAAZ,GAAkBH,MAAM,CAACE,OAAP,CAAeC,GADrC,GAEIH,MAAM,CAACE,OAAP,CAAeC,GAAf,GAAqBT,WAAW,CAACS;QALlC,CAAP;;MAQF;QACE,OAAOJ,KAAP;IAXJ;EAaD,CAdD;;EAgBA,MAAM,CAACA,KAAD,EAAQK,QAAR,IAAoBf,UAAU,CAACS,WAAD,EAAcH,aAAd,CAApC;EAEA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEU,IAAI,EAACN,KAAP;MAAcK;IAAd,CAA7B;IAAA,UACGX;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CA9BM;;GAAMD,mB;;KAAAA,mB"},"metadata":{},"sourceType":"module"}